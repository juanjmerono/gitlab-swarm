version: "3.4"

services:
  gitlab:
    image: "gitlab/gitlab-ce:10.2.3-ce.0"
    hostname: "gitlab.localtest.me"
    volumes:
      - "gitlab_data:/var/opt/gitlab"
      - "gitlab_logs:/var/log/gitlab"
      - "gitlab_config:/etc/gitlab"
    ports:
      - "2222:22"
    configs:
      - source: "gitlab.rb"
        target: "/etc/gitlab/gitlab.rb"
    networks:
      - default
      - proxy
    deploy:
      labels:
        traefik.port: 80
        traefik.frontend.rule: "Host:gitlab.localtest.me"
        traefik.docker.network: "proxy"

  runner:
    image: 'gitlab/gitlab-runner:alpine'
    volumes:
      - "gitlab_runner_config:/etc/gitlab-runner"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - RUNNER_TAG_LIST=docker,runner
      - REGISTER_RUN_UNTAGGED=true
      - REGISTER_LOCKED=false
      - CI_SERVER_URL=gitlab
      - REGISTRATION_TOKEN=1234567890
      - RUNNER_OUTPUT_LIMIT=20480
      - RUNNER_EXECUTOR=docker
      #- DOCKER_NETWORK_MODE=gitlab-ci_gitlab-network
      - DOCKER_VOLUMES=/var/run/docker.sock:/var/run/docker.sock
      - DOCKER_PRIVILEGED=true
      - DOCKER_IMAGE=alpine:latest
    networks:
      - default

  redis:
    image: "redis:4.0.6-alpine"
    command: ["redis-server", "--requirepass", "redispwd"]

  postgres:
    image: "postgres:10.1-alpine"
    volumes:
      - "postgres_data:/data"
    environment:
      POSTGRES_USER: "gitlab"
      POSTGRES_PASSWORD: "gitlab"
      PGDATA: "/data"
      POSTGRES_DB: "gitlab"

  prometheus:
    image: "prom/prometheus:v2.0.0"
    command: "--config.file=/prometheus.yaml --storage.tsdb.path /data"
    volumes:
      - "prometheus_data:/data"
    configs:
      - prometheus.yaml
    networks:
      - default
      - proxy
    deploy:
      labels:
        traefik.port: 9090
        traefik.frontend.rule: "Host:prometheus.localtest.me"
        traefik.docker.network: "proxy"

  grafana:
    image: grafana/grafana:4.6.3
    environment:
      GF_PATHS_CONFIG: "/grafana.ini"
    configs:
      - grafana.ini
    volumes:
      - "grafana_data:/data"
    networks:
      - default
      - proxy
    deploy:
      labels:
        traefik.port: 3000
        traefik.frontend.rule: "Host:grafana.localtest.me"
        traefik.docker.network: "proxy"

  traefik:
    image: traefik
    command: ["--docker", "--docker.swarmmode", "--docker.domain=localtest.me", "--docker.watch", "--web"]
    ports:
      - 80:80
      - 8080:8080
    networks:
      - proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
  


volumes:
  gitlab_data:
  gitlab_logs:
  gitlab_config:
  gitlab_runner_config:
  postgres_data:
  prometheus_data:
  grafana_data:

configs:
  gitlab.rb:
    file: "./gitlab.rb"
  prometheus.yaml:
    file: "./prometheus.yaml"
  grafana.ini:
    file: "./grafana.ini"

networks:
  proxy:
